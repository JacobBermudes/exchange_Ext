#Область СлужебныеПроцедурыИФункции

Функция ПолучитьНастройкиОбмена() экспорт
	
	НастройкиОбмена = Новый Соответствие();
	
	НастройкиВыборка = РегистрыСведений.ОбменМП_НастройкиРасширения.Выбрать();
	Пока НастройкиВыборка.Следующий() цикл
		НастройкиОбмена.Вставить(НастройкиВыборка.ВидНастройки, НастройкиВыборка.Значение);		
	КонецЦикла;
	
	Возврат НастройкиОбмена;
		
КонецФункции

Процедура ЗаписатьНастройкиОбмена(ВидНастройки, ЗначениеНастройки) экспорт
	
	НаборНастроек = РегистрыСведений.ОбменМП_НастройкиРасширения.СоздатьНаборЗаписей();
	НаборНастроек.Отбор.ВидНастройки.Установить(ЗначениеНастройки);
	НаборНастроек.Прочитать();
	Если НаборНастроек.Количество() = 0 тогда
		НоваяНастройка = НаборНастроек.Добавить();
		НоваяНастройка.ВидНастройки = ВидНастройки;
		НоваяНастройка.Значение = ЗначениеНастройки;
	Иначе
		Для каждого Запись из НаборНастроек цикл
			Запись.Значение = ЗначениеНастройки;
		КонецЦикла;
	КонецЕсли;
	
	НаборНастроек.Записать(Истина);
		
КонецПроцедуры

Функция ПолучитьРазрешенныеЗдания(ПомесячнаяТаблицаЗданий, Параметры) экспорт

		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаУникальныхИдентификаторов.УникальныйИдентификатор,
	|	ТаблицаУникальныхИдентификаторов.МесяцНачислений
	|ПОМЕСТИТЬ СписокУникальныхИдентификаторов
	|ИЗ
	|	&ТаблицаУникальныхИдентификаторов КАК ТаблицаУникальныхИдентификаторов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокУникальныхИдентификаторов.МесяцНачислений,
	|	СписокУникальныхИдентификаторов.УникальныйИдентификатор,
	|	ВЫБОР
	|		КОГДА ОбменМП_МесяцыНачисленийУникальныеИдентификаторы.УникальныйИдентификатор ЕСТЬ NULL
	|			ТОГДА Ложь
	|		ИНАЧЕ Истина
	|	КОНЕЦ КАК ВыгружатьНачисления
	|ИЗ
	|	СписокУникальныхИдентификаторов КАК СписокУникальныхИдентификаторов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОбменМП_МесяцыНачислений.УникальныеИдентификаторы КАК
	|			ОбменМП_МесяцыНачисленийУникальныеИдентификаторы
	|		ПО ОбменМП_МесяцыНачисленийУникальныеИдентификаторы.УникальныйИдентификатор = СписокУникальныхИдентификаторов.УникальныйИдентификатор
	|		И
	|			ОбменМП_МесяцыНачисленийУникальныеИдентификаторы.Ссылка.МесяцНачислений = СписокУникальныхИдентификаторов.МесяцНачислений";
	
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Параметры.КонецПериода));
	Запрос.УстановитьПараметр("ТаблицаУникальныхИдентификаторов", ПомесячнаяТаблицаЗданий);	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапрос = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаЗапрос;
		
КонецФункции

#КонецОбласти