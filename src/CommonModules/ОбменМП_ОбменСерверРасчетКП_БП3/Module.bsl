
#Область СлужебныеПроцедурыИФункции

//	Возвращаемое значение:
//		СправочникСсылка.ркЛицевыеСчета
//		СправочникСсылка.ркВидыРасчетов
//		*Количество
//		*НачальныйОстаток
//		*Начислено
//		*Оплачено
//		*КонечныйОстаток
//		*ЛицевойСчетЗдание	
//@skip-check doc-comment-parameter-section
Функция ПолучитьВыборкуНачислений(ВыборкаРазрешенныхЗданийПомесячно, ПараметрыВыгрузки, НастройкиОбмена) экспорт
	
	//Преобразование таблицы с идентификаторами в таблицу значений со ссылками для реализации отбора по разрешенным зданиям
	ТаблицаРазрешенныхЗданий = Новый ТаблицаЗначений;

	ТаблицаРазрешенныхЗданий.Колонки.Добавить("Здание", Новый ОписаниеТипов("СправочникСсылка.ркДома"));
	ТаблицаРазрешенныхЗданий.Колонки.Добавить("МесяцНачислений", Новый ОписаниеТипов("Дата"));

	ВыборкаРазрешенныхЗданийПомесячно.Сбросить();

	Пока ВыборкаРазрешенныхЗданийПомесячно.Следующий() Цикл
		Если ТипЗнч(ВыборкаРазрешенныхЗданийПомесячно.УникальныйИдентификатор) = Тип("УникальныйИдентификатор") Тогда
			НоваяСтрока = ТаблицаРазрешенныхЗданий.Добавить();
			НоваяСтрока.Здание = Справочники.ркДома.ПолучитьСсылку(
			ВыборкаРазрешенныхЗданийПомесячно.УникальныйИдентификатор);
			НоваяСтрока.МесяцНачислений = НачалоМесяца(ВыборкаРазрешенныхЗданийПомесячно.МесяцНачислений);
		КонецЕсли;
	КонецЦикла;

	Запрос = Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаРазрешенныхЗданий.МесяцНачислений КАК МесяцНачислений,
	|	ТаблицаРазрешенныхЗданий.Здание КАК Здание
	|ПОМЕСТИТЬ ТаблицаРазрешенныхЗданий
	|ИЗ
	|	&ТаблицаРазрешенныхЗданий КАК ТаблицаРазрешенныхЗданий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.Период КАК Период,
	|	ЕСТЬNULL(ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.ЛицевойСчет, 0) КАК ЛицевойСчет,
	|	ЕСТЬNULL(ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.ВидРасчета, 0) КАК ВидНачисления,
	|	ЕСТЬNULL(СУММА(ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.СуммаНачальныйОстаток -
	|		ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.СуммаРасход), 0) КАК НачальныйОстаток,
	|	ЕСТЬNULL(СУММА(ркНачисленияОбороты.СуммаНачисленийОборот), 0) КАК Начислено,
	|	ЕСТЬNULL(СУММА(ркНачисленияОбороты.КоличествоВПределахНормыОборот + ркНачисленияОбороты.КоличествоСверхНормыОборот),
	|		0) КАК Количество,
	|	ЕСТЬNULL(СУММА(ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.СуммаРасход), 0) КАК Оплачено,
	|	ЕСТЬNULL(СУММА(ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.СуммаКонечныйОстаток), 0) КАК КонечныйОстаток,
	|	ЕдиницыИзмерений.ЕдиницаРасчетаЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЛицевыеСчетаIdMobApp.ЛицевойСчет КАК ЛицевойСчет,
	|		ТаблицаРазрешенныхЗданий.МесяцНачислений КАК МесяцНачислений
	|	ИЗ
	|		ТаблицаРазрешенныхЗданий КАК ТаблицаРазрешенныхЗданий
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ркДома КАК ркДома
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ркЛицевыеСчета.Ссылка КАК ЛицевойСчет,
	|					ркЛицевыеСчета.Дом КАК Здание
	|				ИЗ
	|					Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	|						ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|						ПО ркЛицевыеСчета.ОтветственныйКвартиросъемщик = ФизическиеЛица.Ссылка) КАК ЛицевыеСчетаIdMobApp
	|				ПО ЛицевыеСчетаIdMobApp.Здание = ркДома.Ссылка
	|			ПО ТаблицаРазрешенныхЗданий.Здание = ркДома.Ссылка
	|	ГДЕ
	|		ркДома.ПометкаУдаления = ЛОЖЬ) КАК ЛицевыеСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ркЗадолженностьЛицевыхСчетов.ОстаткиИОбороты(&НачалоПериода, &КонецПериода,
	|			Месяц,,) КАК ркЗадолженностьЛицевыхСчетовОстаткиИОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ркНачисления.Обороты(&НачалоПериода, &КонецПериода, Месяц,
	|				ТипОперации = ЗНАЧЕНИЕ(Перечисление.ркТипыОперацийНачисления.НачисленияТекущегоПериода)) КАК ркНачисленияОбороты
	|			ПО (ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.ВидРасчета = ркНачисленияОбороты.ВидРасчета)
	|			И (ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.ЛицевойСчет = ркНачисленияОбороты.ЛицевойСчет)
	|			И (ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.Период = ркНачисленияОбороты.Период)
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ркСоставНачисленийСрезПоследних.ЛицевойСчет КАК ЛицевойСчет,
	|				ркСоставНачисленийСрезПоследних.ВидРасчета КАК ВидРасчета,
	|				ркСоставНачисленийСрезПоследних.ЕдиницаРасчета КАК ЕдиницаРасчета,
	|				ркСоставНачисленийСрезПоследних.ЕдиницаРасчета.ЕдиницаИзмерения КАК ЕдиницаРасчетаЕдиницаИзмерения
	|			ИЗ
	|				РегистрСведений.ркСоставНачислений.СрезПоследних КАК ркСоставНачисленийСрезПоследних) КАК ЕдиницыИзмерений
	|			ПО (ркНачисленияОбороты.ЛицевойСчет = ЕдиницыИзмерений.ЛицевойСчет)
	|			И (ркНачисленияОбороты.ВидРасчета = ЕдиницыИзмерений.ВидРасчета)
	|		ПО (ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.ЛицевойСчет = ЛицевыеСчета.ЛицевойСчет
	|		И ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.Период = ЛицевыеСчета.МесяцНачислений)
	|СГРУППИРОВАТЬ ПО
	|	ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.ЛицевойСчет,
	|	ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.ВидРасчета,
	|	ЕдиницыИзмерений.ЕдиницаРасчетаЕдиницаИзмерения,
	|	ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.Период
	|ИТОГИ
	|ПО
	|	Период";

	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыВыгрузки.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПараметрыВыгрузки.КонецПериода));
	Запрос.УстановитьПараметр("ТаблицаРазрешенныхЗданий", ТаблицаРазрешенныхЗданий);

	РезультатЗапроса = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Возврат РезультатЗапроса;

КонецФункции

//	Возвращаемое значение:
//	Основное:		
//		ЛицевойСчет - ссылка
//		Помещение - ссылка
//		Собственник - ссылка
//		ЧислоДолей - число
//		ВсегоДолей - число
//		ДатаЗакрытия - дата
//	Допоплнительные поля
//		Этаж - строка
//		КоличествоКомнат - строка
//		НомерПодъезда - строка 
//		КоличествоПроживающих
//@skip-check doc-comment-type
//@skip-check doc-comment-return-section-type
//@skip-check doc-comment-parameter-section
Функция ПолучитьСобственниковПомещений(Здания)  экспорт//++
		
	Запрос = Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК Собственник,
	|	ркЛицевыеСчета.Ссылка КАК ЛицевойСчет,
	|	ркЛицевыеСчета.Помещение КАК Помещение,
	|	1 КАК ЧислоДолей,
	|	1 КАК ВсегоДолей,
	|	ркЛицевыеСчета.ДатаЗакрытия КАК ДатаЗакрытия,
	|	ДопСведенияЛицевогоСчета.КоличествоКомнат КАК КоличествоКомнат,
	|	ДопСведенияЛицевогоСчета.НомерПодъезда КАК Подъезд,
	|	ДопСведенияЛицевогоСчета.Этаж КАК Этаж,
	|	ДопСведенияЛицевогоСчета.КоличествоПроживающих КАК КоличествоЖителей
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ркЛицевыеСчета.Ссылка КАК ЛицевойСчет,
	|				ЗначенияДополнительныхРеквизитов.КоличествоКомнат КАК КоличествоКомнат,
	|				ЗначенияДополнительныхРеквизитов.НомерПодъезда КАК НомерПодъезда,
	|				ЗначенияДополнительныхРеквизитов.Этаж КАК Этаж,
	|				ЕСТЬNULL(ОбъектыРасчета.КоличествоПроживающих, 0) КАК КоличествоПроживающих
	|			ИЗ
	|				Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ркОбъектыРасчетаСрезПоследних.ЛицевойСчет КАК ЛицевойСчет,
	|						КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ркОбъектыРасчетаСрезПоследних.ОбъектРасчета) КАК КоличествоПроживающих
	|					ИЗ
	|						РегистрСведений.ркОбъектыРасчета.СрезПоследних(, Включен = ИСТИНА
	|						И СтатусОбъектаРасчета = &ОтборСтатус) КАК ркОбъектыРасчетаСрезПоследних
	|					СГРУППИРОВАТЬ ПО
	|						ркОбъектыРасчетаСрезПоследних.ЛицевойСчет) КАК ОбъектыРасчета
	|					ПО (ОбъектыРасчета.ЛицевойСчет = ркЛицевыеСчета.Ссылка)
	|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ЕСТЬNULL(ркЛицевыеСчетаДополнительныеРеквизиты_КоличествоКомнат.Значение, """") КАК КоличествоКомнат,
	|						ЕСТЬNULL(ркЛицевыеСчетаДополнительныеРеквизиты_НомерПодъезда.Значение, """") КАК НомерПодъезда,
	|						ЕСТЬNULL(ркЛицевыеСчетаДополнительныеРеквизиты_Этаж.Значение, """") КАК Этаж,
	|						ркЛицевыеСчета.Ссылка КАК ЛицевойСчет
	|					ИЗ
	|						Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	|							ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ркЛицевыеСчета.ДополнительныеРеквизиты КАК
	|								ркЛицевыеСчетаДополнительныеРеквизиты_Этаж
	|							ПО (ркЛицевыеСчетаДополнительныеРеквизиты_Этаж.Ссылка = ркЛицевыеСчета.Ссылка)
	|							ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ркЛицевыеСчета.ДополнительныеРеквизиты КАК
	|								ркЛицевыеСчетаДополнительныеРеквизиты_НомерПодъезда
	|							ПО (ркЛицевыеСчетаДополнительныеРеквизиты_НомерПодъезда.Ссылка = ркЛицевыеСчета.Ссылка)
	|							ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ркЛицевыеСчета.ДополнительныеРеквизиты КАК
	|								ркЛицевыеСчетаДополнительныеРеквизиты_КоличествоКомнат
	|							ПО (ркЛицевыеСчетаДополнительныеРеквизиты_КоличествоКомнат.Ссылка = ркЛицевыеСчета.Ссылка)
	|					ГДЕ
	|						ркЛицевыеСчетаДополнительныеРеквизиты_КоличествоКомнат.Свойство = &ОтборКоличествоКомнат
	|						И ркЛицевыеСчетаДополнительныеРеквизиты_НомерПодъезда.Свойство = &ОтборНомерПодъезда
	|						И ркЛицевыеСчетаДополнительныеРеквизиты_Этаж.Свойство = &ОтборЭтаж) КАК ЗначенияДополнительныхРеквизитов
	|					ПО (ЗначенияДополнительныхРеквизитов.ЛицевойСчет = ркЛицевыеСчета.Ссылка)) КАК ДопСведенияЛицевогоСчета
	|			ПО (ДопСведенияЛицевогоСчета.ЛицевойСчет = ркЛицевыеСчета.Ссылка)
	|		ПО (ркЛицевыеСчета.ОтветственныйКвартиросъемщик = ФизическиеЛица.Ссылка)
	|ГДЕ
	|	НЕ &ИспользоватьОтборПоЗданиям
	|	ИЛИ &ИспользоватьОтборПоЗданиям
	|	И ркЛицевыеСчета.Дом В (&Здания)";
	Запрос.УстановитьПараметр("ОтборКоличествоКомнат",
		ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Количество комнат"));
	Запрос.УстановитьПараметр("ОтборНомерПодъезда",
		ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Номер подъезда"));
	Запрос.УстановитьПараметр("ОтборЭтаж", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(
		"Этаж"));
	Запрос.УстановитьПараметр("ОтборСтатус", Справочники.ркСтатусыОбъектовРасчета.НайтиПоКоду("000000002"));
	Запрос.УстановитьПараметр("ИспользоватьОтборПоЗданиям", Здания.Количество() > 0);
	Запрос.УстановитьПараметр("Здания", Здания);

	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;

КонецФункции

#КонецОбласти