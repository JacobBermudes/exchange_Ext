
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыОбмена = ОбменМП_СлужебныйВызовСервера.ПолучитьНастройкиОбмена();
	
	ПВХДляОтбора = ПланыВидовХарактеристик.ОбменМП_НастройкиОбмена.НаименованиеМетаданных;
	СправочникНаименованиеМетаданных = ПараметрыОбмена.Получить(ПВХДляОтбора);
		
	Если СправочникНаименованиеМетаданных = Неопределено или СправочникНаименованиеМетаданных = "" тогда		
		ОбщегоНазначения.СообщитьПользователю("В настройках обмена с мобильным приложением необходимо установить наименование метаданных у справочника зданий для подбора объектов отбора плана обмена");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Попытка
		
		СправочникМенеджер = Справочники[СправочникНаименованиеМетаданных];
		Для Каждого ИдентификаторОбъекта Из Объект.Здания Цикл
			ЗданиеСтрокаТаблицы = ТаблицаЗданий.Добавить();
			ЗданиеСсылка = СправочникМенеджер.ПолучитьСсылку(ИдентификаторОбъекта.УникальныйИдентификатор);
			ЗданиеСтрокаТаблицы.Здание = ЗданиеСсылка;
			ЗданиеСтрокаТаблицы.Номер = ИдентификаторОбъекта.НомерСтроки;
		КонецЦикла;
		
	Исключение
		
		ОбщегоНазначения.СообщитьПользователю("Некорректное наименование справочника для зданий!");
		Отказ = Истина;
	
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Удаление пустых строк перед сохранением уникальных идентификаторов в табличную часть узла плана обмена
	НомерСтрокиДляУдаления = ТаблицаЗданий.Количество() - 1;
	Пока НомерСтрокиДляУдаления >= 0 цикл
		ЗданиеСсылка = ТаблицаЗданий.Получить(НомерСтрокиДляУдаления).Здание;
		Если НЕ ЗначениеЗаполнено(ЗданиеСсылка) тогда
			ТаблицаЗданий.Удалить(НомерСтрокиДляУдаления);
		КонецЕсли;
		НомерСтрокиДляУдаления = НомерСтрокиДляУдаления - 1;
	КонецЦикла;	
	//

	ТекущийОбъект.Здания.Очистить();
			
	Для каждого ЭлементТаблицыФормы из ТаблицаЗданий цикл
		УникальныйИдентификаторЗданияСтроки = ЭлементТаблицыФормы.Здание.УникальныйИдентификатор();
		НовыйИдентификаторЗдания = ТекущийОбъект.Здания.Добавить();
		НовыйИдентификаторЗдания.УникальныйИдентификатор = УникальныйИдентификаторЗданияСтроки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	//TODO
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаЗданий
&НаКлиенте
Процедура ТаблицаЗданийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	Если Копирование или Отказ тогда
		Возврат;		
	КонецЕсли;
		
	ИмяФормыВыбора = СтрШаблон("Справочник.%1.Форма.ФормаВыбора", СправочникНаименованиеМетаданных);
	ОткрытьФорму(ИмяФормыВыбора,,Элемент);		
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗданийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НоваяСтрока = Элементы.ТаблицаЗданий.ТекущиеДанные;
	НоваяСтрока.Здание = ВыбранноеЗначение;
	НоваяСтрока.Номер = ТаблицаЗданий.Количество();
	
КонецПроцедуры

#КонецОбласти


